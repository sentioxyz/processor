# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@5.0.2

jobs:
  build_and_test:
#    filters: # only run on PR
#      branches:
#        ignore:
#          - main
    executor: node/default # use the default executor defined within the orb
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
#      - run:
#          command: yarn install
#          name: Yarn Install
      - run:
          command: yarn build_all && yarn gen && yarn test || yarn test # TODO remove this hack, understand why test will fail in first run
          name: Test SDK
          working_directory: packages/sdk
#      - run:
#          command: yarn build
#          name: Build CLI
#          working_directory: cli
      - run:
          command: ./scripts/build-all.sh
          name: Build All
      - run:
          command: sudo npm link
          name: Link CLI globally for template testing
          working_directory: packages/cli
      - run:
          command: yarn install && yarn gen && yarn test
          name: Test Template - Aptos
          working_directory: packages/cli/templates/aptos
      - run:
          command: yarn install && yarn gen && yarn test
          name: Test Template - EVM
          working_directory: packages/cli/templates/evm
      - run:
          command: yarn install && yarn test
          name: Test Template - Solana
          working_directory: packages/cli/templates/solana
      - run:
          command: yarn install && yarn test
          name: Test Template - RAW
          working_directory: packages/cli/templates/raw
#      - persist_to_workspace:
#          root: ~/project
#          paths:
#            - .

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  ci: # This is the name of the workflow, feel free to change it to better match your workflow.
  # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build_and_test
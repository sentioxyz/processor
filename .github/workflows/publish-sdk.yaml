name: Publish SDK & CLI

on:
  push:
    branches:
      - main
      - release
      - v1
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.event.inputs.commit }}
      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 16
      - name: Install
        run: yarn install
      - name: Build
        run: yarn lerna run build --no-private
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: SDK Release Summary
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo "### New SDK version v${{ steps.semantic.outputs.new_release_version }} cut" >> $GITHUB_STEP_SUMMARY
          echo "commit: ${GITHUB_SHA}, branch/tag: ${GITHUB_REF}" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.semantic.outputs.new_release_notes }}" >> $GITHUB_STEP_SUMMARY
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: report error
        if: steps.semantic.outputs.new_release_published == 'false'
        run: |
          echo "### No SDK version cut" >> $GITHUB_STEP_SUMMARY
          echo "Check Semantic Release output for details"
      - name: Lerna Publish
        run: |
          DIST_TAG=latest
          if [[ "${{ contains(steps.semantic.outputs.new_release_version, '-rc.') }}" == "true" ]]; then          
            DIST_TAG=rc
          fi
          echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
          yarn lerna publish ${{ steps.semantic.outputs.new_release_version }} --no-private --yes --no-push --no-git-tag-version --dist-tag $DIST_TAG
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Build CLI
        run: yarn build
        working-directory: packages/cli
      - name: Clean templates node mdules
        run: "rm -rf */node_modules"
        working-directory: packages/cli/templates
      - name: CLI Prepare
        run: npx -y json -I -f package.json -e "this.private=false"
        working-directory: packages/cli
      - name: Semantic Release CLI
        id: semantic_cli
        uses: cycjimmy/semantic-release-action@v3
        with:
          working_directory: packages/cli
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: CLI Release Summary
        if: steps.semantic_cli.outputs.new_release_published == 'true'
        run: |
          echo "### New CLI version v${{ steps.semantic_cli.outputs.new_release_version }} cut" >> $GITHUB_STEP_SUMMARY
          echo "commit: ${GITHUB_SHA}, branch/tag: ${GITHUB_REF}" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.semantic_cli.outputs.new_release_notes }}" >> $GITHUB_STEP_SUMMARY
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: report error
        if: steps.semantic.outputs.new_release_published == 'false'
        run: |
          echo "### No CLI version cut" >> $GITHUB_STEP_SUMMARY
          echo "Check Semantic Release output for details"
